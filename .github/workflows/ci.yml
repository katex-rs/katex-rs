name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  check:
    name: Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-check-
            ${{ runner.os }}-cargo-

      - name: Check code
        run: cargo check --all-targets --all-features

  clippy:
    name: Clippy Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-clippy-
            ${{ runner.os }}-cargo-

      - name: Run clippy
        run: cargo clippy --all-targets --all-features --workspace

  test:
    name: Unit and Integration Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@nightly

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-
            ${{ runner.os }}-cargo-

      - name: Install cargo-nextest
        run: cargo install --locked cargo-nextest

      - name: Run unit and integration tests
        run: cargo nextest run --no-fail-fast --all-features --workspace

  doc-test:
    name: Documentation Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    continue-on-error: true  # Allow doc tests to fail as they have existing issues
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-doc-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-doc-
            ${{ runner.os }}-cargo-

      - name: Run doc tests
        run: cargo test --doc --all-features --workspace

  browser-test:
    name: Browser Tests (Screenshots)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    continue-on-error: true  # Allow this job to fail without failing the overall workflow
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-wasm-
            ${{ runner.os }}-cargo-

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install system Firefox
        uses: browser-actions/setup-firefox@v1

      - name: Install Geckodriver
        uses: browser-actions/setup-geckodriver@latest

      - uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Setup yarn
        run: corepack enable && corepack prepare yarn@stable --activate

      - name: Install NPM dependencies for KaTeX
        run: yarn install
        working-directory: ./KaTeX

      - name: Run browser tests
        run: |
          cargo xtask screenshotter --browser firefox

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: browser-test-results
          path: |
            artifacts/screenshotter/new/
            artifacts/screenshotter/diff/
          retention-days: 7